name: Build and Deploy DSM
on:
  push:
    branches: [development]
  pull_request:
    branches: [development]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE,
      # so your workflow can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
#       - run: npm i
#       - run: CI=false npm run build
      
      - name: Tar build to deploy.tar
        run: |
          mkdir ../build
          cp -TR . ../build
          tar -cvf deploy.tar ../build/

      # Copying files and artifacts via SSH
      - name: Copying deploy.tar to server via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_KEY }}
          passphrase: ${{ secrets.DEV_PASSPHRASE }}
          source: "deploy.tar"
          target: "/var/www/html"
          
      # Untar 
      - name: Untar deploy.tar via SSH Script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USERNAME }}
          key: ${{ secrets.DEV_KEY }}
          passphrase: ${{ secrets.DEV_PASSPHRASE }}
          script: sh DeployDSM.sh
